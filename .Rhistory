getTasaporYear(lista9,32)
lista9[32,]
lista9[21,]
lista9
lista9$ANUAL
getPoblacionYears(32)
lista9$ANUAL
lista9$ANUAL[1]
lista9$AÑO
getTasaporYear <- function(listaDelitos, clave){
population <- getPoblacionYears(clave)
#TODO TERMINAR FUNCION
casos <- listaDelitos[,clave]$ANUAL
tasa <- casos/population*100000
tasa
}
getPoblacionYears(3)
getPoblacionYears(32)
library(shiny)
#library(readxl)
library(dplyr)
library(plotly)
library(readr)
library(magrittr)
library(mxmaps)
library(leaflet)
library(htmltools)
library(shinycssloaders)
getPoblacionYears(32)
getPoblacionYears(3)
lista9
getTasaporYear <- function(listaDelitos, clave){
population <- getPoblacionYears(clave)
#TODO TERMINAR FUNCION
casos <- listaDelitos[,clave]$ANUAL
tasa <- casos/population*100000
tasa
}
getTasaporYear(lista9, 3)
lista9[,3]
lista9[3,]
getTasaporYear <- function(listaDelitos, clave){
population <- getPoblacionYears(clave)
#TODO TERMINAR FUNCION
casos <- listaDelitos[clave,]$ANUAL
tasa <- casos/population*100000
tasa
}
getTasaporYear(lista9, 3)
getPoblacionYears(3)
lista9
lista9[3,]$ANUAL
lista9[3,]
lista9
lista8
getTasaporYear(lista8, 3)
lista8
lista8[3]
lista9[3]
lista9[3,]
lista8[3,]
lista8[3]
lista9[3,]$ANUAL
lista9
lista9$ANUAL
prueba7 <- querysin("BAJA CALIFORNIA SUR", "HOMICIDIOS", "DOLOSOS", "CON ARMA DE FUEGO")
lista8 <- prueba7$ANUAL
lista8
getTasaporYear(lista8, 3)
getTasaporYear <- function(listaDelitos, clave){
population <- getPoblacionYears(clave)
#TODO TERMINAR FUNCION
casos <- listaDelitos[clave]
tasa <- casos/population*100000
tasa
}
getTasaporYear(lista9,3)
for(i in years){
llave <- years[i]
print(llave)
}
for(i in years){
print(i)
}
years[1997]
years[21]
for(i in 1:21){
llave <- years[i]
population <- getPoblacionYears(llave)
casos <- lista8[llave,]$ANUAL
tasa <- casos/population*100000
print(tasa)
}
lista8
lista8[4,]
lista8[4]
getTasaporYear <- function(listaDelitos, clave){
for(i in years){
llave <- years[i]
population <- getPoblacionYears(llave)
casos <- listaDelitos[llave]
tasa <- casos/population*100000
tasa
}
}
getTasaporYear(lista8,3)
lista8[3]
prueba7
getTasaporYear <- function(listaDelitos, clave){
for(i in years){
llave <- years[i]
population <- getPoblacionYears(llave)
casos <- listaDelitos[llave,]$ANUAL
tasa <- casos/population*100000
tasa
}
}
getTasaporYear(prueba7, 3)
getPoblacionYears(3)
prueba7
lista9$ANUAL[1]
lista9$ANUAL[3]
lista9$ANUAL[21]
getTasaporYear <- function(listaDelitos, clave){
#for(i in years){
#llave <- years[i]
population <- getPoblacionYears(llave)
casos <- listaDelitos$ANUAL[i]
tasa <- casos/population*100000
tasa
#}
}
getTasaporYear(prueba7, 3)
getTasaporYear <- function(listaDelitos, clave){
for(i in years){
llave <- years[i]
population <- getPoblacionYears(llave)
casos <- listaDelitos$ANUAL[i]
tasa <- casos/population*100000
tasa
}
}
getTasaporYear(prueba7, 3)
getTasaporYear <- function(listaDelitos, clave){
for(i in years){
llave <- years[i]
population <- getPoblacionYears(llave)
casos <- listaDelitos$ANUAL[i]
tasa <- casos/population*100000
print(tasa)
}
}
getTasaporYear(prueba7, 3)
getTasaporYear <- function(listaDelitos, clave){
#for(i in years){
#llave <- years[i]
population <- getPoblacionYears(clave)
casos <- listaDelitos$ANUAL
tasa <- casos/population*100000
tasa
#}
}
getTasaporYear(prueba7, 3)
getTasaTodosYears <- function(listaDelitos, clave){
for(i in 1:21){
tasa <- getTasaporYear(listaDelitos, i)
print(tasa)
}
}
getTasaTodosYears(prueba7, 3)
getTasaTodosYears <- function(listaDelitos, clave){
for(i in 1:21){
tasa <- getTasaporYear(listaDelitos, i)
}
print(tasa)
}
getTasaTodosYears(prueba7, 3)
prueba7
getTasaTodosYears(prueba7, 3)
getTasaTodosYears <- function(listaDelitos, clave){
for(i in 1:21){
tasa <- getTasaporYear(listaDelitos, clave)
}
print(tasa)
}
getTasaTodosYears(prueba7, 3)
lista9
lista8
getPoblacionEstados <- function(clave, anio){
fila <- filter(populationMX, populationMX$CLAVE==clave, populationMX$AÑO==anio)
poblacion <- fila$POBLACION
poblacion
}
getPoblacionEstados(9, 2017)
getPoblacionEstados(3, 2017)
getPoblacionEstados(1, 2017)
citation()
library(shiny)
#library(readxl)
library(dplyr)
library(plotly)
library(readr)
library(magrittr)
library(mxmaps)
library(leaflet)
library(htmltools)
library(shinycssloaders)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getTasaTodosEstados <- function(listaDelitos, anio){
for(i in claves){
tasa <- getTasaPorEstado(listaDelitos, i, anio)
print(tasa)
}
}
lista9
lista8
lista6
getTasaTodosEstados(lista6, 2007)
getPoblacionEstados(1, 2017)
runApp()
runApp()
runApp()
lista9
lista8
lista6
runApp()
runApp()
runApp()
runApp()
unique(lista6$AÑO)
type(unique(lista6$AÑO))
typeof(unique(lista6$AÑO))
runApp()
populationMX$POBLACION[1]
filter(populationMX, populationMX$CLAVE==1 & populationMX$AÑO==1997)
getRatesStates <- function(listaDelitos, anio){
for(i in 1:32){
filtrada <- filter(populationMX, populationMX$CLAVE==i & populationMX$AÑO==anio)
casos <- listaDelitos[i,]
poblacion <- populationMX$POBLACION[i]
}
}
getRatesStates(lista9, 1997)
getRatesStates <- function(listaDelitos, anio){
for(i in 1:32){
filtrada <- filter(populationMX, populationMX$CLAVE==i & populationMX$AÑO==anio)
casos <- listaDelitos[i,]
poblacion <- filtrada[i]
tasa <- casos/poblacion*100000
tasa
}
}
getRatesStates(lista9, 1997)
lista9
lista8
getRatesStates(lista8, 1997)
getRatesStates <- function(listaDelitos, anio){
for(i in 1:32){
filtrada <- filter(populationMX, populationMX$CLAVE==i & populationMX$AÑO==anio)
casos <- listaDelitos[i]
poblacion <- filtrada[i]
tasa <- casos/poblacion*100000
tasa
}
}
getRatesStates(lista8, 1997)
getRatesStates(lista8, "1997")
lista8
typeof(lista8(1))
typeof(lista8[1])
getRatesStates <- function(listaDelitos, anio){
for(i in 1:32){
filtrada <- filter(populationMX, populationMX$CLAVE==i & populationMX$AÑO==anio)
casos <- as.integer(listaDelitos[i])
poblacion <- filtrada[i]
tasa <- casos/poblacion*100000
tasa
}
}
typeof(lista8[1])
getRatesStates(lista8, "1997")
getRatesStates(lista8, 1997)
lista8[2]
lista8[3]
typeof(lista8[1])
as.integer(lista8[1])
as.integer(lista8[2])
as.integer(lista8[3])
typeof(lista8)
filter(populationMX, populationMX$CLAVE==1 & populationMX$AÑO==1997)
lista11 <- filter(populationMX, populationMX$CLAVE==1 & populationMX$AÑO==1997)
lista11
lista11[3]
getRatesStates <- function(listaDelitos, anio){
for(i in 1:32){
filtrada <- filter(populationMX, populationMX$CLAVE==i & populationMX$AÑO==anio)
casos <- as.integer(listaDelitos[i])
poblacion <- as.integer(filtrada[3])
tasa <- casos/poblacion*100000
tasa
}
}
getRatesStates(lista8, 1997)
getRatesStates <- function(listaDelitos, anio){
for(i in 1:32){
filtrada <- filter(populationMX, populationMX$CLAVE==i & populationMX$AÑO==anio)
casos <- as.integer(listaDelitos[i])
poblacion <- as.integer(filtrada[3])
tasa <- casos/poblacion*100000
print(tasa)
}
}
getRatesStates(lista8, 1997)
runApp()
runApp()
runApp()
lista12 <- filter(populationMX, populationMX$CLAVE==1 & populationMX$AÑO==1997)
lista12
as.integer(lista12[3])
as.integer(lista12[4])
getRatesStates <- function(listaDelitos, anio){
for(i in 1:32){
filtrada <- filter(populationMX, populationMX$CLAVE==i & populationMX$AÑO==anio)
casos <- as.integer(listaDelitos[i])
poblacion <- as.integer(filtrada[4])
tasa <- casos/poblacion*100000
print(tasa)
}
}
getRatesStates(lista8, 1997)
getRatesStates(lista9, 1997)
getRatesStates(lista6, 1997)
lista9
lista8
lista6
getRatesStates(lista6, 1997)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getRatesStates(lista6, 1998)
getRatesStates(lista8, 1998)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
View(lista9)
View(lista7)
View(lista6)
View(lista12)
View(lista11)
View(delitos)
View(prueba)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df_mxstate
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(getRatesStates)
View(lista9)
unique(lista9$ENTIDAD)
lista9$ENTIDAD
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getRatesYears <- function(listaDelitos, lista2, anio){
listaRates <- c()
for(i in 1:21){
filtrada <- filter(populationMX, populationMX$ESTADO==unique(lista2$ENTIDAD) & populationMX$AÑO==anio)
casos <- as.integer(listaDelitos[i])
poblacion <- as.integer(filtrada[4])
tasa <- casos/poblacion*100000
listaRates[i] <- tasa
}
print(listaRates)
}
View(lista9)
View(prueba5)
View(lista9)
View(getRatesYears)
View(getRatesYears)
getRatesYears(lista9$ANUAL, lista2, 1997)
getRatesYears(lista9$ANUAL, lista9$ENTIDAD, 1997)
getRatesYears(lista9$ANUAL, unique(lista9$ENTIDAD), 1997)
unique(lista9$ENTIDAD)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
filter(populationMX, populationMX$ESTADO=="JALISCO")
runApp()
View(getRatesYears)
View(getRatesYears)
filter(populationMX, populationMX$ESTADO=="JALISCO")
cuetnta <- filter(populationMX, populationMX$ESTADO=="JALISCO")
cuetnta[4]
cuetnta$POBLACION
cuetnta[4][1]
cuetnta[4]
cuetnta[4][1,]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(profvis)
profvis(runApp())
library(shiny)
profvis(runApp())
install.packages(c("data.table", "digest", "evaluate", "fansi", "htmlwidgets", "mime", "R6", "Rcpp", "rstudioapi", "tidyselect"))
shiny::runApp()
profvis(runApp())
runApp()
profvis(runApp())
profvis(runApp())
runApp()
profvis(runApp())
?shinycssleaders
?shinycssloaders
library(shinycssloaders)
?shinycssloaders
install.packages("shinyWidgets")
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
?withProgress
runApp()
runApp()
runApp()
install.packages(c("dplyr", "ps", "raster", "rgdal", "sf"))
